{"version":3,"file":"static/js/114.4e3c4a5c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 20px;\n  border: 2px solid black;\n  border-radius: 5px;\n\n  p {\n    margin-bottom: 5px;\n  }\n\n  label {\n    margin-top: -5px;\n  }\n\n  span {\n    color: red;\n    margin-left: 5px;\n  }\n\n  button {\n    width: 120px;\n    margin: 15px auto;\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  width: 200px;\n  height: 40px;\n`;\n\n","import { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { StyledForm, StyledInput } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nconst schema = Yup.object().shape({\n  name: Yup.string().required('Required'),\n  number: Yup.string().required('Required'),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const allcontacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = (value, actions) => {\n    if (allcontacts.find(contact => contact.name === value.name)) {\n      return alert(`${value.name} is already in contacts`);\n    }\n    \n    if (allcontacts.find(contact => contact.number === value.number)) {\n      return alert(`${value.number} is already in contacts`);\n    }\n\n    dispatch(addContact({ ...value}));\n    actions.resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmitForm}\n    >\n      <StyledForm>\n        <label>\n          <p>Name:</p>\n          <StyledInput type=\"text\" name=\"name\" placeholder=\"Input name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </label>\n\n        <label>\n          <p>Number:</p>\n          <StyledInput type=\"tel\" name=\"number\" placeholder=\"Input number\" />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const StyledContactList = styled.ul`\n  li {\n    padding: 5px 10px;\n  }\n\n  button {\n    margin-left: 10px;\n    font-size: 10px;\n  }\n`;\n","import { StyledContactList } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, getContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filterValue = useSelector(state => state.filter.value);\n  const error = useSelector(state => state.contacts.error);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {contacts > 0 ? (\n        <div>Loading...</div>\n      ) : error ? (\n        <div>Error: {error}</div>\n      ) : (\n        <StyledContactList>\n          {filteredContacts.map(contact => (\n            <li key={contact.id}>\n              {contact.name}: {contact.number}\n              <button onClick={() => dispatch(deleteContact(contact.id))}>\n                Delete\n              </button>\n            </li>\n          ))}\n        </StyledContactList>\n      )}\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\nimport { getContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n      <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledInput","Field","_templateObject2","schema","Yup","shape","name","required","number","initialValues","ContactForm","allcontacts","useSelector","state","contacts","items","dispatch","useDispatch","_jsx","Formik","validationSchema","onSubmit","value","actions","find","contact","alert","concat","addContact","_objectSpread","resetForm","children","_jsxs","type","placeholder","ErrorMessage","component","StyledContactList","ContactList","filterValue","filter","error","filteredContacts","toLowerCase","includes","useEffect","getContacts","_Fragment","map","onClick","deleteContact","id","isLoading","selectIsLoggedIn","Helmet"],"sourceRoot":""}